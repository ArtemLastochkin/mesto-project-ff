{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["// функции создания, удаления, лайка карточки\r\nexport function creatCard(\r\n  data,\r\n  openPopupCardImg,\r\n  handleLikeCard,\r\n  myId,\r\n  openDeleteCardOk,\r\n) {\r\n  const cardTemplate = document.querySelector(\"#card-template\").content;\r\n  const cardTemplateItem = cardTemplate.querySelector(\".places__item\");\r\n  const cardTemplateItemCopy = cardTemplateItem.cloneNode(true);\r\n  const cardImage = cardTemplateItemCopy.querySelector(\".card__image\");\r\n  const cardTitle = cardTemplateItemCopy.querySelector(\".card__title\");\r\n  const cardDeleteButton = cardTemplateItemCopy.querySelector(\r\n    \".card__delete-button\"\r\n  );\r\n  const cardLikeButton =\r\n    cardTemplateItemCopy.querySelector(\".card__like-button\");\r\n  const likeCounter = cardTemplateItemCopy.querySelector(\r\n    \".card__like-button__counter\"\r\n  );\r\n\r\n  // проверка на собственной карточки\r\n  if (data[\"owner\"][\"_id\"] !== myId) {\r\n    cardDeleteButton.setAttribute(\"disabled\", \"\"); // выключаем кнопки удаления если не наша карточка\r\n    cardDeleteButton.classList.remove(\"card__delete-button_is-active\"); // отобразили кнопку удаления\r\n  } else {\r\n    cardDeleteButton.classList.add(\"card__delete-button_is-active\"); // скрыли кнопку удаления\r\n    // если карточка моя вещаем на кнопку удаления слушатель клика\r\n    cardDeleteButton.addEventListener(\"click\", (evt) => {\r\n      openDeleteCardOk(`${data[\"_id\"]}`, evt.target.closest(\".card\")); // - функция которая открывает модалку при клике на кнопку удаления\r\n    });\r\n  }\r\n  // проверка наличия моего лайка при создании карточки\r\n  const booleanMyIdInArrayLikes = Boolean(data[\"likes\"].find(element => element._id.includes(myId)))\r\n  cardLikeButton.classList.toggle(\"card__like-button_is-active\", booleanMyIdInArrayLikes);\r\n\r\n  likeCounter.textContent = `${data.likes.length}`;\r\n  cardImage.src = data.link;\r\n  cardImage.alt = data.name;\r\n  cardTitle.textContent = data.name;\r\n\r\n  cardLikeButton.addEventListener(\"click\", (evt) => {\r\n    handleLikeCard(evt, data, likeCounter);\r\n  });\r\n  cardImage.addEventListener(\"click\", () => openPopupCardImg(data));\r\n  return cardTemplateItemCopy;\r\n}\r\n\r\nexport function deleteCardElement(element) {\r\n  element.remove();\r\n}\r\n\r\nexport function checkLikeCard(buttonLike) {\r\n return buttonLike.classList.contains(\"card__like-button_is-active\")\r\n}\r\n\r\nexport function likeCard(element) {\r\n  element.classList.toggle(\"card__like-button_is-active\");\r\n}\r\n","// функции popup: карточки, добавления карточки, редактирования профиля, закрыть popup\r\nexport function openPopup(element) {\r\n  element.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keydown\", clickEscape);\r\n}\r\n\r\nexport function closePopup(element) {\r\n  element.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", clickEscape);\r\n}\r\n\r\nexport function clickOverlay(evt) {\r\n  if (evt.target.classList.contains(\"popup\")) {\r\n    closePopup(evt.target);\r\n  }\r\n}\r\n\r\nfunction clickEscape(evt) {\r\n  if (evt.key === \"Escape\") {\r\n    const popupIsOpened = document.querySelector(\".popup_is-opened\");\r\n    closePopup(popupIsOpened);\r\n  }\r\n}\r\n","// включение валидации\r\nexport function enableValidation(obj) {\r\n  Array.from(document.querySelectorAll(`${obj.keyPopapInput}`)).forEach(\r\n    (item) => {\r\n      item.addEventListener(\"input\", (evt) => {\r\n        const formActive = evt.target.closest(`${obj.keyPopupForm}`);\r\n        const activeInputEvent = evt.target;\r\n        checkValidate(formActive, obj, activeInputEvent);\r\n      });\r\n    }\r\n  );\r\n}\r\n\r\n// ФУНКЦИЯ проверки валидации поля\r\nfunction checkValidate(form, obj, activeInputEvent) {\r\n  const booleanArrayInpitsAllValid = Array.from(\r\n    form.querySelectorAll(`${obj.keyPopapInput}`)\r\n  ).every((i) => i.validity.valid);\r\n  if (!activeInputEvent.validity.valid) {\r\n    showError(form, obj, activeInputEvent);\r\n  } else {\r\n    clearError(form, obj, activeInputEvent, booleanArrayInpitsAllValid);\r\n  }\r\n}\r\n\r\n// ФУНКЦИЯ показа ошибки\r\nfunction showError(form, obj, activeInputEvent) {\r\n  inactiveBtnSubmit(form.querySelector(`${obj.keyDeleteBtn}`));\r\n  const spanErrorNotValidInput = form.querySelector(\r\n    `#${activeInputEvent.id + obj.keyIdSpanError}`\r\n  );\r\n  activeInputEvent.classList.add(\"popup__input-error\");\r\n  spanErrorNotValidInput.classList.add(\"popup__error-message\");\r\n\r\n  if (activeInputEvent.validity.patternMismatch) {\r\n    spanErrorNotValidInput.textContent = activeInputEvent.dataset.errorMessage;\r\n  } else {\r\n    spanErrorNotValidInput.textContent = activeInputEvent.validationMessage;\r\n  }\r\n}\r\n\r\n// ФУНКЦИЯ очистки ошибки\r\nfunction clearError(form, obj, activeInputEvent, booleanArrayInpitsAllValid) {\r\n  if (booleanArrayInpitsAllValid) {\r\n    // сделать кнопку активной если все инпуты валидны\r\n    activeBtnSubmit(form.querySelector(`${obj.keyDeleteBtn}`));\r\n  }\r\n  activeInputEvent.classList.remove(\"popup__input-error\");\r\n  form.querySelector(\r\n    `#${activeInputEvent.id + obj.keyIdSpanError}`\r\n  ).textContent = \"\";\r\n}\r\n\r\n// ФУНКЦИЯ сделать неактивной кнопку отправки\r\nfunction inactiveBtnSubmit(elm) {\r\n  elm.classList.add(\"popup__button__no-active\");\r\n  elm.setAttribute(\"disabled\", \"\");\r\n}\r\n\r\n// ФУНКЦИЯ сделать активной кнопку отправки\r\nfunction activeBtnSubmit(elm) {\r\n  elm.classList.remove(\"popup__button__no-active\");\r\n  elm.removeAttribute(\"disabled\");\r\n}\r\n\r\n// Очистка валидации при открытии модал\r\nexport function clearValidation(form, obj) {\r\n  const booleanArrayInpitsAllValid = Array.from(\r\n    form.querySelectorAll(`${obj.keyPopapInput}`)\r\n  ).every((i) => i.validity.valid);\r\n  Array.from(form.querySelectorAll(`${obj.keyPopapInput}`)).forEach((i) => {\r\n    clearError(form, obj, i, booleanArrayInpitsAllValid);\r\n  });\r\n  inactiveBtnSubmit(form.querySelector(`${obj.keyDeleteBtn}`));\r\n}\r\n","const objSettingForRequest = {\r\n  homeUrl: \"https://nomoreparties.co/v1/wff-cohort-24\",\r\n  headersAuthorization: `020c57ef-afc5-4efb-96e2-9de924c090b7`,\r\n  contentType: {\r\n    applicationJson: \"application/json\",\r\n  },\r\n};\r\n\r\nconst getResponseData = (res) => {\r\n  if (!res.ok) {\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n  return res.json();\r\n};\r\n// ==================================== Запросы GET на СЕРВЕР ================================ \\\\\r\nexport function getDataProfileFromServ() {\r\n  return fetch(`${objSettingForRequest.homeUrl}/users/me`, {\r\n    headers: {\r\n      authorization: objSettingForRequest.headersAuthorization,\r\n    },\r\n  }).then((res) => getResponseData(res));\r\n}\r\n\r\nexport function getCardsFromServ() {\r\n  return fetch(`${objSettingForRequest.homeUrl}/cards`, {\r\n    headers: {\r\n      authorization: objSettingForRequest.headersAuthorization,\r\n    },\r\n  }).then((res) => getResponseData(res));\r\n}\r\n\r\n// ==================================== Запросы PATCH на СЕРВЕР ================================ \\\\\r\nexport function setDataPofileServ(name, about) {\r\n  return fetch(`${objSettingForRequest.homeUrl}/users/me`, {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      authorization: objSettingForRequest.headersAuthorization,\r\n      \"Content-Type\": objSettingForRequest.contentType.applicationJson,\r\n    },\r\n    body: JSON.stringify({\r\n      name,\r\n      about,\r\n    }),\r\n  });\r\n}\r\n\r\nexport function setAvatarPofileServ(avatar) {\r\n  return fetch(`${objSettingForRequest.homeUrl}/users/me/avatar`, {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      authorization: objSettingForRequest.headersAuthorization,\r\n      \"Content-Type\": objSettingForRequest.contentType.applicationJson,\r\n    },\r\n    body: JSON.stringify({\r\n      avatar,\r\n    }),\r\n  });\r\n}\r\n\r\n// ==================================== Запросы POST на СЕРВЕР ================================ \\\\\r\nexport function setNewCardServ(dataName, dataLink) {\r\n  return fetch(`${objSettingForRequest.homeUrl}/cards`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      authorization: objSettingForRequest.headersAuthorization,\r\n      \"Content-Type\": objSettingForRequest.contentType.applicationJson,\r\n    },\r\n    body: JSON.stringify({\r\n      name: dataName,\r\n      link: dataLink,\r\n    }),\r\n  }).then((res) => getResponseData(res));\r\n}\r\n\r\n// ==================================== Запросы PUT на СЕРВЕР ================================ \\\\\r\nexport function setLikeCard(id) {\r\n  return fetch(`${objSettingForRequest.homeUrl}/cards/likes/${id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      authorization: objSettingForRequest.headersAuthorization,\r\n    },\r\n  }).then((res) => getResponseData(res));\r\n}\r\n\r\n// ==================================== Запросы DELETE на СЕРВЕР ================================ \\\\\r\nexport function deleteCard(id) {\r\n  return fetch(`${objSettingForRequest.homeUrl}/cards/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      authorization: objSettingForRequest.headersAuthorization,\r\n    },\r\n  }).then((res) => getResponseData(res));\r\n}\r\n","import \"./pages/index.css\";\r\nimport { creatCard, likeCard, deleteCardElement, checkLikeCard } from \"./components/card\";\r\nimport { closePopup, openPopup, clickOverlay } from \"./components/modal\";\r\nimport { enableValidation, clearValidation } from \"./components/validation\";\r\nimport {\r\n  getDataProfileFromServ,\r\n  getCardsFromServ,\r\n  setDataPofileServ,\r\n  setNewCardServ,\r\n  deleteCard,\r\n  setLikeCard,\r\n  setAvatarPofileServ,\r\n} from \"./components/api\";\r\n\r\n// =======================================Константы=======================================\r\n// глобал const\r\nconst profileTitle = document.querySelector(\".profile__title\");\r\nconst profileDescription = document.querySelector(\".profile__description\");\r\n\r\nconst profileImage = document.querySelector(\".profile__image\");\r\n\r\nconst profileEditButton = document.querySelector(\".profile__edit-button\");\r\nconst profileAddButton = document.querySelector(\".profile__add-button\");\r\n\r\nconst popupTypeEdit = document.querySelector(\".popup_type_edit\");\r\nconst popupTypeNewCard = document.querySelector(\".popup_type_new-card\");\r\nconst popupTypeImage = document.querySelector(\".popup_type_image\");\r\nconst popupTypeNewAvatar = document.querySelector(\".popup_type_new-avatar\");\r\nconst popupDeleteQuestion = document.querySelector(\".popup_type_delete-card\");\r\n\r\nconst formTypeEditProfile = document.forms[\"edit-profile\"];\r\nconst formTypeNewCard = document.forms[\"new-place\"];\r\nconst formTypeNewAvatar = document.forms[\"new-avatar\"];\r\nconst formTypeQuestionDelete = document.forms[\"question-delete\"];\r\n\r\nconst inputNamePopupTypeEdit = document.forms[\"edit-profile\"].elements.name;\r\nconst inputDescriptionPopupTypeEdit =\r\n  document.forms[\"edit-profile\"].elements.description;\r\nconst inputPlaceNameTypeNewCard =\r\n  document.forms[\"new-place\"].elements[\"place-name\"];\r\nconst inputlinkTypeNewCard = document.forms[\"new-place\"].elements.link;\r\n\r\nconst imagePopupTypeImage = popupTypeImage.querySelector(\"img\");\r\nconst textPopupTypeImage = popupTypeImage.querySelector(\".popup__caption\");\r\n\r\nconst placesList = document.querySelector(\".places__list\");\r\nconst popupPseudoArr = document.querySelectorAll(\".popup\");\r\nconst popupArr = Array.from(popupPseudoArr);\r\n\r\n// =======================================Объекты настроек=======================================\r\n// глобал объекты настроек\r\n\r\nconst validationSetting = {\r\n  keyPopapInput: \".popup__input\",\r\n  keyPopupForm: \".popup__form\",\r\n  keyIdSpanError: \"__error_message\",\r\n  keyDeleteBtn: \"[type=submit]\",\r\n};\r\n\r\nconst objSettingForDeleteCard = {\r\n  idCard: \"\",\r\n  keyElementCard: \"\",\r\n};\r\n\r\n// =======================================Функция открыть окно подтверждения=======================================\r\nfunction openDeleteCardOk(id, element) {\r\n  objSettingForDeleteCard.idCard = id;\r\n  objSettingForDeleteCard.keyElementCard = element;\r\n  openPopup(popupDeleteQuestion);\r\n}\r\n\r\n// =======================================Функции изменения текста во время загрузки=======================================\r\nfunction setTextLoadingBtnDel(form) {\r\n  form.querySelector(`${validationSetting.keyDeleteBtn}`).textContent =\r\n    \"Сохранение...\";\r\n}\r\n\r\nfunction deleteTextLoadingBtnDel(form) {\r\n  form.querySelector(`${validationSetting.keyDeleteBtn}`).textContent =\r\n    \"Сохранить\";\r\n}\r\n\r\n// =======================================Функции Обработка кликов=======================================\r\n// обработчик клика по карточке\r\nfunction openPopupCardImg(data) {\r\n  imagePopupTypeImage.src = data.link;\r\n  imagePopupTypeImage.alt = data.name;\r\n  textPopupTypeImage.textContent = data.name;\r\n  openPopup(popupTypeImage);\r\n}\r\n\r\n// обработка поставить лайк\r\nfunction handleLikeCard(evt, dataCard, likeCounter) {\r\n  if (!checkLikeCard(evt.target)) {\r\n    setLikeCard(dataCard._id)\r\n      .then((res) => {\r\n        likeCard(evt.target);\r\n        likeCounter.textContent = res.likes.length;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err); // выводим ошибку в консоль\r\n      });\r\n  } else {\r\n    deleteCard(`likes/${dataCard._id}`)\r\n      .then((res) => {\r\n        likeCard(evt.target);\r\n        likeCounter.textContent = res.likes.length;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err); // выводим ошибку в консоль\r\n      });\r\n  }\r\n}\r\n\r\n// =======================================Функции Обработка сабмитов=======================================\r\n// обработка submit для редактирования профиля\r\nfunction editProfileFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  setTextLoadingBtnDel(evt.target);\r\n  setDataPofileServ(\r\n    inputNamePopupTypeEdit.value,\r\n    inputDescriptionPopupTypeEdit.value\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .then((res) => {\r\n      profileTitle.textContent = res.name;\r\n      profileDescription.textContent = res.about;\r\n      closePopup(popupTypeEdit);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err); // выводим ошибку в консоль\r\n    })\r\n    .finally(function () {\r\n      deleteTextLoadingBtnDel(evt.target);\r\n    });\r\n}\r\n\r\n// обработка submit для создания карточки\r\nfunction addNewCardFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  setTextLoadingBtnDel(evt.target);\r\n  setNewCardServ(inputPlaceNameTypeNewCard.value, inputlinkTypeNewCard.value)\r\n    .then((res) => {\r\n      placesList.prepend(\r\n        creatCard(\r\n          res,\r\n          openPopupCardImg,\r\n          handleLikeCard,\r\n          res[`owner`][`_id`],\r\n          openDeleteCardOk\r\n        )\r\n      );\r\n      closePopup(popupTypeNewCard);\r\n      inputPlaceNameTypeNewCard.value = \"\";\r\n      inputlinkTypeNewCard.value = \"\";\r\n    })\r\n    .catch((err) => {\r\n      console.log(err); // выводим ошибку в консоль\r\n    })\r\n    .finally(function () {\r\n      deleteTextLoadingBtnDel(evt.target);\r\n    });\r\n}\r\n\r\n// обработка submit удаления карточки\r\nfunction handleSubmitPopupQuestionDeleteCard(evt, id, element) {\r\n  evt.preventDefault();\r\n  deleteCard(id)\r\n    .then(() => {\r\n      deleteCardElement(element);\r\n      closePopup(popupDeleteQuestion);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err); // выводим ошибку в консоль\r\n    });\r\n}\r\n\r\n// обработка submit нового аватара\r\nfunction handleSubmitPopupNewAvatar(evt) {\r\n  evt.preventDefault();\r\n  setTextLoadingBtnDel(evt.target);\r\n  const valueInputUrlPopupTypeNewAvatar = evt.target.querySelector(\r\n    `${validationSetting.keyPopapInput}`\r\n  ).value;\r\n  setAvatarPofileServ(valueInputUrlPopupTypeNewAvatar)\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .then((res) => {\r\n      profileImage.setAttribute(\r\n        \"style\",\r\n        `background-image: url(${res.avatar})`\r\n      );\r\n      closePopup(popupTypeNewAvatar);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err); // выводим ошибку в консоль\r\n    })\r\n    .finally(function () {\r\n      deleteTextLoadingBtnDel(evt.target);\r\n    });\r\n}\r\n\r\n// ==========================================================Вызовы функций=======================================\r\n// включить валидацию форм\r\nenableValidation(validationSetting);\r\n\r\n// ==========================================================Слушатели кликов=======================================\r\n// клик на аватар\r\nprofileImage.addEventListener(\"click\", function () {\r\n  formTypeNewAvatar.querySelector(\r\n    `${validationSetting.keyPopapInput}`\r\n  ).value = ``;\r\n  clearValidation(formTypeNewAvatar, validationSetting);\r\n  formTypeNewAvatar.addEventListener(\"submit\", handleSubmitPopupNewAvatar);\r\n  openPopup(popupTypeNewAvatar);\r\n});\r\n\r\n// клик по кнопке редактировать профиль\r\nprofileEditButton.addEventListener(\"click\", function (evt) {\r\n  openPopup(popupTypeEdit);\r\n  inputNamePopupTypeEdit.value = profileTitle.textContent;\r\n  inputDescriptionPopupTypeEdit.value = profileDescription.textContent;\r\n  clearValidation(formTypeEditProfile, validationSetting);\r\n});\r\n\r\n// клик по кнопке добавить карточку\r\nprofileAddButton.addEventListener(\"click\", function (evt) {\r\n  openPopup(popupTypeNewCard);\r\n  clearValidation(formTypeNewCard, validationSetting);\r\n});\r\n\r\n// =========================================================Слушатели сабмит=======================================\r\n// слушатели submit для форм редактирования профиля\r\nformTypeEditProfile.addEventListener(\"submit\", editProfileFormSubmit);\r\nformTypeNewCard.addEventListener(\"submit\", addNewCardFormSubmit);\r\nformTypeQuestionDelete.addEventListener(\"submit\", function (evt) {\r\n  handleSubmitPopupQuestionDeleteCard(\r\n    evt,\r\n    objSettingForDeleteCard.idCard,\r\n    objSettingForDeleteCard.keyElementCard\r\n  );\r\n});\r\n\r\n// =======================================Вызовы при старте страницы=======================================\r\n// +класс при старте, +слушатель на кнопку крестик, +слушатель на оверлей popup\r\npopupArr.forEach(function (item) {\r\n  item.classList.add(\"popup_is-animated\");\r\n  item\r\n    .querySelector(\".popup__close\")\r\n    .addEventListener(\"click\", (evt) => closePopup(item));\r\n  item.addEventListener(\"click\", clickOverlay);\r\n});\r\n\r\n// ОТОБРАЖЕНИЕ ПРИ ЗАГРУЗКЕ СТРАНИЦЫ\r\nPromise.all([getCardsFromServ(), getDataProfileFromServ()])\r\n  .then((res) => {\r\n    // Вписали данные от сервера в профиль и вывели на страницу\r\n    profileTitle.textContent = res[1][\"name\"];\r\n    profileDescription.textContent = res[1][\"about\"];\r\n    profileImage.setAttribute(\r\n      \"style\",\r\n      `background-image: url(${res[1][\"avatar\"]})`\r\n    );\r\n\r\n    // Вывод карточек на страницу\r\n    res[0].forEach(function (item) {\r\n      placesList.append(\r\n        creatCard(\r\n          item,\r\n          openPopupCardImg,\r\n          handleLikeCard,\r\n          res[1][`_id`],\r\n          openDeleteCardOk\r\n        )\r\n      );\r\n    });\r\n  })\r\n  .catch((err) => {\r\n    console.log(err); // выводим ошибку в консоль\r\n  });\r\n"],"names":["creatCard","data","openPopupCardImg","handleLikeCard","myId","openDeleteCardOk","cardTemplateItemCopy","document","querySelector","content","cloneNode","cardImage","cardTitle","cardDeleteButton","cardLikeButton","likeCounter","setAttribute","classList","remove","add","addEventListener","evt","concat","target","closest","booleanMyIdInArrayLikes","Boolean","find","element","_id","includes","toggle","textContent","likes","length","src","link","alt","name","likeCard","openPopup","clickEscape","closePopup","removeEventListener","clickOverlay","contains","key","clearError","form","obj","activeInputEvent","booleanArrayInpitsAllValid","elm","keyDeleteBtn","removeAttribute","id","keyIdSpanError","inactiveBtnSubmit","clearValidation","Array","from","querySelectorAll","keyPopapInput","every","i","validity","valid","forEach","objSettingForRequest","homeUrl","headersAuthorization","contentType","applicationJson","getResponseData","res","ok","json","Promise","reject","status","deleteCard","fetch","method","headers","authorization","then","profileTitle","profileDescription","profileImage","profileEditButton","profileAddButton","popupTypeEdit","popupTypeNewCard","popupTypeImage","popupTypeNewAvatar","popupDeleteQuestion","formTypeEditProfile","forms","formTypeNewCard","formTypeNewAvatar","formTypeQuestionDelete","inputNamePopupTypeEdit","elements","inputDescriptionPopupTypeEdit","description","inputPlaceNameTypeNewCard","inputlinkTypeNewCard","imagePopupTypeImage","textPopupTypeImage","placesList","popupPseudoArr","popupArr","validationSetting","keyPopupForm","objSettingForDeleteCard","idCard","keyElementCard","setTextLoadingBtnDel","deleteTextLoadingBtnDel","dataCard","catch","err","console","log","handleSubmitPopupNewAvatar","avatar","preventDefault","value","body","JSON","stringify","finally","item","formActive","spanErrorNotValidInput","patternMismatch","dataset","errorMessage","validationMessage","showError","checkValidate","about","dataName","dataLink","prepend","deleteCardElement","handleSubmitPopupQuestionDeleteCard","all","append"],"sourceRoot":""}